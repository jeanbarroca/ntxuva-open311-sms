<?php
// ntxuva_sms.module
/**
 * Implements hook_menu().
 */
function ntxuva_sms_menu() {
  $items = array();

  $items['admin/config/ntxuva/open311-sms'] = array(
    'title' => 'Configure Ntxuva Open311 SMS',
    'description' => 'Settings for Ntxuva Open311 SMS Module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ntxuva_sms_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['ntxuva/open311-sms'] = array(
    'access callback' => TRUE,
    'page callback' => 'ntxuva_sms_handle',
    'access arguments' => array('view published content'),
    'delivery callback' => 'drupal_json_output',
  );

  return $items;
}
?>

<?php
// Ntxuva Open311 SMS config settings
/**
 * Callback: Ntxuva Open311 SMS config settings
 *
 */
function ntxuva_sms_form($form, &$form_state) {

  global $base_url;
  $ntxuva_default_endpoint = $base_url . "georeport/v2";

  $form['ntxuva_sms_secret_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter your secret key'),
    '#default_value' => variable_get('ntxuva_sms_secret_key', 'ntxuva-default-password'),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t('Secret key for secure communication with Telerivet'),
    '#required' => TRUE,
  );
  $form['nxtuva_open311_endpoint'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter Open311 GeoReport v2 endpoint'),
    '#default_value' => variable_get('nxtuva_open311_endpoint', $ntxuva_default_endpoint),
    '#size' => 100,
    '#maxlength' => 100,
    '#description' => t('Open311 GeoReport v2 API Endpoint for SMS interaction'),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}
?>

<?php
// Ntxuva Open311 SMS Handler
/**
 * Callback: Ntxuva Open311 SMS Handler
 *
 */
function ntxuva_sms_handle() {

  if (empty($_POST)) { // check if request is ok
      header('HTTP/1.1 403 Forbidden');
      echo "Empty post";
      return;
  }

  $secret = variable_get('ntxuva_sms_secret_key', "ntxuva-maputo");

  if ($secret !== $_POST['secret']) { // check secret key
        header('HTTP/1.1 403 Forbidden');
        echo "Invalid secret provided. \n";
        echo "Post key:" . $_POST['secret'];
        return;
  }
  else if ($_POST['event'] == 'incoming_message')
    {
        watchdog("ntxuva_sms", "New request: " .print_r($_POST,true)); // save request for debugging

        // Check first word and decide what user wants: submit a new service_request or find status of an existing one.
        $content = str_word_count($_POST['content'], 1, 'àáãéíóúóèç1234567890-');

        if (($content[0]=='estado'))
          ntxuva_sms_query_request();
        else
          ntxuva_sms_create_request();
    }

  return;
  }
?>

<?php
// ntxuva_sms.module
/**
 * Deals with query from user
 *
 */
  function ntxuva_sms_query_request() {
/*
    This will be used in the future

    global $base_url;
    $ntxuva_default_endpoint = $base_url . "georeport/v2";
    $endpoint = variable_get('nxtuva_open311_endpoint', $ntxuva_default_endpoint);

    */

    $content = str_word_count($_POST['content'], 1, 'àáãéíóúóèç1234567890-');

    // Validation: Look for request_id
    $request_id = $content[1];

    // Request status from Open311 Endpoint


    $url = "http://psms.m4p5.com/georeport/v2/requests/{$request_id}.json";
    $json = file_get_contents($url);
    $res = json_decode($json, true);

    // If successful, send status

    if (isset($res[0]['status'])) {
      $reply = "Obrigado pela sua mensagem! O estado do seu pedido '$request_id' é: ". $res[0]['status'];
      watchdog("ntxuva_sms", "Got response from Open311: " .print_r($res,true)); // save request for debugging
  }

    // If not, apologize
    else {
      $reply = "Lamentavelmente, não conseguimos encontrar o seu pedido numero '$request_id'.";
       watchdog("ntxuva_sms", "Didn't got response from Open311. URL: '$url' Request: '$request_id' "); // save request for debugging
  }


    // Send reply

    header("Content-Type: application/json");
    echo json_encode(array('messages' =>
      array(
        array('content' => $reply)
        )
    ));
    return;
  }
?>



<?php
  function ntxuva_sms_create_request() {

    $url = "http://psms.m4p5.com/georeport/v2/requests.json";

    $from_number = $_POST['from_number']."@user.com";

    // Look for location by SMS code

    $content = str_word_count($_POST['content'], 1, 'àáãéíóúóèç1234567890-');

    // Validation: Look for request_id
    $location = $content[0];
    $location_result = taxonomy_get_term_by_name($location);

    $category = $content[1];
    $category_result = taxonomy_get_term_by_name($category);

    if(empty($location_result)) {
      $successful=0;
      watchdog("ntxuva_sms", "Point not found: " . print_r($location_result,true)); // save request for debugging
      $reply = "Lamentavelmente, não conseguimos introduzir o seu pedido. O seu ponto de recolha não foi reconhecido.";
      header("Content-Type: application/json");
      echo json_encode(array('messages' =>
        array(
          array('content' => $reply)
          )
      ));
      return;
    }
    else {

      watchdog("ntxuva_sms", "Getting location taxonomy " . print_r($location_result,true)); // save request for debugging

      $tid = key($location_result);
      $location_result = $location_result[$tid];

      $loc = entity_metadata_wrapper('taxonomy_term', $location_result);

      $lat = $loc->field_lat->value();
      $long = $loc->field_long->value();

      watchdog("ntxuva_sms", "Status of location taxonomy: " . print_r($location_result,true) . " Lat: '$lat' Long: '$long'"); // save request for debugging


      $successful=1;
    }


    // Look for category by SMS code

    if(empty($category_result) & $successful) {
      $successful=0;
      watchdog("ntxuva_sms", "Deu asneira a pedir a Categoria " .print_r($category_result,true)); // save request for debugging
      $reply = "Lamentavelmente, não conseguimos introduzir o seu pedido. A categoria não foi reconhecida.";
      header("Content-Type: application/json");
      echo json_encode(array('messages' =>
        array(
          array('content' => $reply)
          )
      ));
      return;
    }
    else {
      $successful=1;
      $tid = key($category_result);
      $category_result = $category_result[$tid];
      $cat = entity_metadata_wrapper('taxonomy_term', $category_result);

      $service_code = $cat->field_service_code->value();
    }

    // Include description

    $description = $content[2];

    // Prepare JSON
    watchdog("ntxuva_sms", "Preparing JSON: " . print_r($request,true)); // save request for debugging


    $request = array(
    'email'      => $from_number,
    'long'    => $long,
    'lat'       => $lat,
    'description' => $description,
    'service_code'      => $service_code
    );

    $options = array(
    'http' => array(
    'method'  => 'POST',
    'content' => json_encode( $request ),
    'header'=>  "Content-Type: application/json\r\n" .
                "Accept: application/json\r\n"
              )
    );

    $context  = stream_context_create( $options );


    // Send JSON POST to Submit issue

    $result = file_get_contents( $url, false, $context );
    $res = json_decode($result, true);

    // Define reply message
    // If error, send verbose message to user.
      if (isset($res[0]['service_request_id'])) {
        $request_id = $res[0]['service_request_id'];
        $reply = "Obrigado pela sua mensagem! O seu pedido foi guardado com o código '$request_id'";
        watchdog("ntxuva_sms", "Open311: New service request succesfully submitted: " .print_r($res,true)); // save request for debugging
      }

      // If not, apologize
      else {
        $reply = "Lamentavelmente, não conseguimos introduzir o seu pedido, por favor tente mais tarde'.";
         watchdog("ntxuva_sms", "Open311: could not create request"); // save request for debugging
      }
      header("Content-Type: application/json");
      echo json_encode(array('messages' =>
        array(
          array('content' => $reply)
          )
      ));
    return;
  }
?>
